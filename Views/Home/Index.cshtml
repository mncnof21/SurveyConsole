@{
    ViewData["Title"] = "Home Page";
    var user = ViewBag.User;
}

<style>
    #map {
        height: 400px;
    }
</style>

@section Scripts{
    <script>
        var jq = $.noConflict();
        var baseUrl = '@((this.Context.Request.IsHttps ? "https://" : "http://") + (this.Context.Request.Host.Value))';
    </script>
    <script src="~/js/vuejs/vue.js"></script>
    <script src="~/js/axios/axios.js"></script>
    <script src="~/js/promise-polyfill/dist/polyfill.js"></script>

    <script>
        var vm = new Vue({
            el: "#app",
            data: {
                dt: null,
                customers: [],
                currPage: 1,
                totalPage: 1,
                totalData: 0,
                limit: 10,
                keyword: "",
                isLoading: !1,
                dtobj: {}
            }, watch: {
                limit: function (t, a) {
                    var e = parseInt(t);
                    this.currPage = 1,
                        this.loadCustomer(this.currPage, e, this.keyword)
                }, keyword: function (t, a) {
                    this.currPage = 1,
                        this.loadCustomer(this.currPage, this.limit, this.keyword)
                }, currPage: function (t, a) {
                    var e = parseInt(t); this.loadCustomer(e, this.limit, this.keyword)
                }
            }, beforeMount: function () {
            }, mounted: function () {
                this.loadCustomer(this.currPage, this.limit, null)
            },
            methods: {
                openModal: function () {
                    jq("#AddModal").modal("show")
                },
                closeModal: function () {
                    this.Nama = "", this.Nik = "", this.Nopol = "", this.Notelp = "", this.Alamat = "", jq("#AddModal").modal("hide")
                },
                openModalPush: function (item) {
                    document.getElementById("taskid").value = item.Id;
                    jq("#AddModalPush").modal("show")
                },
                closeModalPush: function () {
                    this.Surveyor = "", jq("#AddModalPush").modal("hide")
                },
                loadCustomer: function (t, a, e) {
                    this.isLoading = !0, axios({
                        method: "get", url: baseUrl + "/Home/GetAppl/" + t + "/" + a + (null === e || "" === e ? "" : "?keyword=" + e)
                    }).then(t => {
                        this.customers = t.data.data, this.totalPage = t.data.totalPage, this.totalData = t.data.totalData
                    }).catch(t => { }).then(t => { this.isLoading = !1 })
                },
                addCustomer: function () {
                    var t = document.getElementById("addAppl"), a = {
                        CustName: document.getElementById("nama").value,
                        CustNik: document.getElementById("nik").value,
                        Phone: document.getElementById("notelp").value,
                        UnitId: document.getElementById("nopol").value,
                        Address: document.getElementById("alamat").value
                    };
                    a.CustName && a.CustNik && a.Phone && a.UnitId && a.Address ?
                        axios({
                            method: "post",
                            url: '@Url.Action("AddAppl", "Home")',
                            data: a
                        }).then(t => {
                            Swal.fire("Sukses", t.data.message, "success").then(function () {
                                /*vm.$data.customers.unshift(t.data.data),*/
                                location.reload(),
                                vm.closeModal()
                            })
                        }).catch(t => {
                            Swal.fire("Gagal!", "Gagal menyimpan data!", "error")
                        }) : t.submit()
                },
                deleteCustomer: function (t) {
                    Swal.fire({
                        title: "Konfirmasi",
                        text: "Anda yakin akan menghapus data ini?",
                        icon: "warning",
                        showCancelButton: !0,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Ya, Hapus!",
                        cancelButtonText: "Batal"
                    }).then(a => {
                        a.value && axios.delete('@(Url.Action("DeleteAppl", "Home"))/' + t.Id).then(a => {
                            Swal.fire("Terhapus!", a.data.message, "success").then(function () {
                                vm.$data.customers.splice(vm.$data.customers.indexOf(t), 1)
                            })
                        }).catch(t => {
                            Swal.fire("Gagal!", "Gagal menghapus data!", "error")
                        })
                    })
                },
                pushNotification: function () {
                    var latilong = document.getElementById("latlong").value;
                    var fields = latilong.split("|");
                    var latitude = fields[0];
                    var longitude = fields[1];
                    var sel = document.getElementById("surveyor");
                    var t = document.getElementById("pushNotif"), a = {
                        TaskId: document.getElementById("taskid").value,
                        Latitude: latitude,
                        Longitude: longitude,
                        SurveyorNik: sel.options[sel.selectedIndex].value
                    };
                    a.TaskId && a.Latitude && a.Longitude && a.SurveyorNik ?
                        axios({
                            method: "post",
                            url: '@Url.Action("PushNotif", "Home")',
                            data: a
                        }).then(t => {
                            Swal.fire("Sukses", t.data.message, "success").then(function () {
                                /*vm.$data.customers.unshift(t.data.data),*/
                                location.reload(),
                                vm.closeModalPush()
                            })
                        }).catch(t => {
                            Swal.fire("Gagal!", "Gagal menyimpan data!", "error")
                        }) : t.submit()

                    @*var latilong = document.getElementById("latlong").value;
                    var fields = latilong.split("|");
                    var latitude = fields[0];
                    var longitude = fields[1];
                    var sel = document.getElementById("surveyor");

                    var t = document.getElementById("pushNotif"), a = {
                        TaskId: document.getElementById("taskid").value,
                        Latitude: latitude,
                        Longitude: longitude,
                        SurveyorNik: sel.options[sel.selectedIndex].value
                    };
                    a.TaskId, a.Latitude, a.Longitude, a.SurveyorNik ?
                    axios({
                            method: "post",
                            url: '@Url.Action("PushNotif", "Home")',
                            data: a
                    }).then(t => {
                        Swal.fire("Sukses", t.data.message, "success").then(function () {
                            location.reload(),
                            vm.closeModalPush()
                        })
                    })*@
                    @*axios.post('@(Url.Action("SendNotification", "Home"))', a).then(t => {
                        Swal.fire("Sukses", "Notifikasi telah terkirim!", "success")
                    })*@
                }
            }
        });
    </script>
    <script type="text/javascript">
        let map;
        let marker;
        let geocoder;

        function initMap() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var latitude = position.coords.latitude;
                    var longitude = position.coords.longitude;

                    const myLatlng = { lat: latitude, lng: longitude };                    

                    map = new google.maps.Map(document.getElementById("map"), {
                        zoom: 12,
                        center: myLatlng,
                        mapTypeControl: false,
                    });
                    geocoder = new google.maps.Geocoder();

                    const inputText = document.createElement("input");

                    inputText.type = "text";
                    inputText.placeholder = "Enter a location";
                    /*inputText.classList.add("form-control");*/

                    const submitButton = document.createElement("input");

                    submitButton.type = "button";
                    submitButton.value = "Search";
                    /*submitButton.classList.add("btn", "btn-primary");*/

                    const clearButton = document.createElement("input");

                    clearButton.type = "button";
                    clearButton.value = "Clear";
                    /*clearButton.classList.add("btn", "btn-danger");*/


                    map.controls[google.maps.ControlPosition.TOP_LEFT].push(inputText);
                    map.controls[google.maps.ControlPosition.TOP_LEFT].push(submitButton);
                    map.controls[google.maps.ControlPosition.TOP_LEFT].push(clearButton);

                    marker = new google.maps.Marker({
                        map,
                    });
                    map.addListener("click", (e) => {
                        geocode({ location: e.latLng });
                        document.getElementById("latlong").value = e.latLng.lat() + "|" + e.latLng.lng();
                    });
                    submitButton.addEventListener("click", () =>
                        geocode({ address: inputText.value })
                    );
                    clearButton.addEventListener("click", () => {
                        inputText.value = "";
                        clear();
                    });
                    clear();
                });
            } else {
                alert("Geolocation API is not supported in your browser.");
            }
        }

        function clear() {
            marker.setMap(null);
        }

        function geocode(request) {
            clear();
            geocoder
                .geocode(request)
                .then((result) => {
                    const { results } = result;

                    map.setCenter(results[0].geometry.location);
                    marker.setPosition(results[0].geometry.location);
                    marker.setMap(map);
                    return results;
                })
                .catch((e) => {
                    alert("Geocode was not successful for the following reason: " + e);
                });
        }

    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBP8ddT8pyXLN7UHdbZTGrTVPEzt7Wwedk&callback=initMap" async defer></script>
}


<div id="app">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                &nbsp;
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Data Customer</h4>
                    </div><!--end card-header-->
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 col-sm-12">
                                <div class="float-md-left">
                                    <div class="form">
                                        <div class="form-group row">
                                            <label for="perpage" class="col-md-6 col-sm-12 col-form-label">Per Page</label>
                                            <div class="col-md-6 col-sm-12">
                                                <select name="perpage" id="perpage" v-model="limit" class="form-control">
                                                    <option value="10">10</option>
                                                    <option value="25">25</option>
                                                    <option value="50">50</option>
                                                    <option value="100">100</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <div class="float-md-right">
                                    <div class="form">
                                        <div class="form-group row">
                                            <label for="search" class="col-md-6 col-sm-12 col-form-label">Search</label>
                                            <div class="col-md-6 col-sm-12">
                                                <input type="text" class="form-control" id="search" name="search" v-model="keyword">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table id="datatable" class="table table-bordered" style="border-collapse: collapse; border-spacing: 0; width: 100%; overflow-x: scroll;">
                                        <thead>
                                            <tr>
                                                <th>Name</th>
                                                <th>NIK</th>
                                                <th>Telepon</th>
                                                <th>No Polisi</th>
                                                <th>Alamat</th>
                                                <th style="text-align: center;"><button class="btn btn-primary" v-on:click="openModal()"><i class="fas fa-plus mr-2"></i>Tambah</button></th>
                                            </tr>
                                        </thead>
                                        <tbody id="tblbody">
                                            <template v-for="(item, index) in this.customers">
                                                <tr>
                                                    <td>{{ item.Nama }}</td>
                                                    <td>{{ item.Nik }}</td>
                                                    <td>{{ item.Notelp }}</td>
                                                    <td>{{ item.Nopol }}</td>
                                                    <td>{{ item.Alamat }}</td>
                                                    <td style="text-align: center; width: 2%;">
                                                        <button class="btn btn-success btn-sm btn-block" v-on:click="openModalPush(item)" :disabled="item.IsPush == 1">Push</button>
                                                        @*<button class="btn btn-success btn-sm btn-block" v-on:click="pushNotification(item)">Push</button>*@
                                                        <button class="btn btn-danger btn-sm btn-block" v-on:click="deleteCustomer(item)" :disabled="item.IsPush == 1">Hapus</button>
                                                    </td>
                                                </tr>
                                            </template>
                                            <tr v-if="isLoading">
                                                <td colspan="7" style="text-align: center;"><img src="~/assets/images/spinner.gif" style="width: 48px;" /></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                &nbsp;
                            </div>
                            <div class="col-md-4 justify-content-center">
                                <div class="form-group row justify-content-center">
                                    <button class="btn btn-primary" v-on:click="currPage = currPage-1" :disabled="currPage <= 1">Previous</button>
                                    &nbsp;
                                    <select class="form-control" v-model="currPage" style="width: 15%;">
                                        <option v-for="n in totalPage" v-bind:value="n">
                                            {{ n }}
                                        </option>
                                    </select>
                                    &nbsp;
                                    <button class="btn btn-primary" v-on:click="currPage = currPage+1" :disabled="currPage >= totalPage">Next</button>
                                </div>
                            </div>
                            <div class="col-md-4">
                                &nbsp;
                            </div>
                        </div>
                    </div>
                </div>
            </div> <!-- end col -->
        </div> <!-- end row -->
    </div><!-- container -->

    <div class="modal fade" id="AddModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Tambah Customer</h5>
                    <button type="button" class="close" data-dismiss="modal" v-on:click="closeModal()" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="addAppl" method="post">
                        <div class="form">
                            <div class="form-group">
                                <label for="nama">Nama</label>
                                <input type="text" class="form-control" id="nama" name="nama" required>
                            </div>
                            <div class="form-group">
                                <label for="nik">NIK</label>
                                <input type="text" class="form-control" id="nik" name="nik" required>
                            </div>
                            <div class="form-group">
                                <label for="nopol">No Polisi</label>
                                <input type="text" class="form-control" id="nopol" name="nopol" required>
                            </div>
                            <div class="form-group">
                                <label for="notelp">Telepon</label>
                                <input type="number" class="form-control" id="notelp" name="notelp" required>
                            </div>
                            <div class="form-group">
                                <label for="alamat">Alamat</label>
                                <textarea name="alamat" class="form-control" id="alamat" required></textarea>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" v-on:click="addCustomer()">Simpan</button>
                    <button type="button" class="btn btn-danger" v-on:click="closeModal()" data-dismiss="modal">Batal</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="AddModalPush" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Push to Survey Customer</h5>
                    <button type="button" class="close" data-dismiss="modal" v-on:click="closeModalPush()" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="pushNotif" method="post">
                        <div class="form">
                            <div class="form-group">
                                <label for="nama">Task ID</label>
                                <input type="text" class="form-control" id="taskid" name="taskid" disabled required>
                            </div>
                            <div class="form-group">
                                <label for="nik">Latitude | Longitude</label>
                                <input type="text" class="form-control" id="latlong" name="latlong" disabled required>
                            </div>
                            <div class="form-group">
                                <label for="nama">Surveyor</label>
                                <select class="form-control" id="surveyor" name="surveyor">
                                    <option value="@String.Empty">- Select Surveyor -</option>
                                    @if (user != null)
                                    {
                                        foreach (var item in user)
                                        {
                                            <option value="@item.Nik">@item.Nama</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <div id="map"></div>

                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" v-on:click="pushNotification()">Push</button>
                    <button type="button" class="btn btn-danger" v-on:click="closeModalPush()" data-dismiss="modal">Batal</button>
                </div>
            </div>
        </div>
    </div>
</div>


