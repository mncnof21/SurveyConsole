@{
    ViewData["Title"] = "Master User Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts{
    <script>
        var jq = $.noConflict();
        var baseUrl = '@((this.Context.Request.IsHttps ? "https://" : "http://") + (this.Context.Request.Host.Value))';
    </script>
    <script src="~/js/vuejs/vue.js"></script>
    <script src="~/js/axios/axios.js"></script>
    <script src="~/js/promise-polyfill/dist/polyfill.js"></script>

    <script>
        var vm = new Vue({
            el: '#app',
            data: {
                baseUrl: baseUrl,
                dt: null,
                masterusers: [],
                currPage: 1,
                totalPage: 1,
                totalData: 0,
                limit: 10,
                keyword: '',
                isLoading: false
            },
            watch: {
                limit: function (newLimit, oldLimit) {
                    var parseLimit = parseInt(newLimit);
                    this.currPage = 1;
                    this.loadMasterUser(this.currPage, parseLimit, this.keyword);
                },
                keyword: function (newKeyword, oldKeyword) {
                    this.currPage = 1;
                    this.loadMasterUser(this.currPage, this.limit, this.keyword);
                },
                currPage: function (newcurrPage, oldcurrPage) {
                    var parsePage = parseInt(newcurrPage);
                    this.loadMasterUser(parsePage, this.limit, this.keyword);
                }
            },
            mounted: function () {
                this.loadMasterUser(this.currPage, this.limit, null);
            },
            methods: {
                loadMasterUser: function (page, limit, keyword) {
                    this.isLoading = true;
                    axios({
                        method: 'get',
                        url: baseUrl + '/User/GetMasterUser/' + page + '/' + limit + (keyword === null || keyword === '' ? '' : '?keyword=' + keyword),
                    }).then((response) => {
                        this.masterusers = response.data.data;
                        this.totalPage = response.data.totalPage;
                        this.totalData = response.data.totalData;
                    }).catch((error) => {

                    }).then((response) => {
                        this.isLoading = false;
                    });
                },
                deleteUser: function (t) {
                    Swal.fire({
                        title: "Konfirmasi",
                        text: "Anda yakin akan menghapus data ini?",
                        icon: "warning",
                        showCancelButton: !0,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Ya, Hapus!",
                        cancelButtonText: "Batal"
                    }).then(a => {
                        a.value && axios.delete('@(Url.Action("DeleteUser", "User"))/' + t.Id).then(a => {
                            Swal.fire("Terhapus!", a.data.message, "success").then(function () {
                                vm.$data.masterusers.splice(vm.$data.masterusers.indexOf(t), 1)
                            })
                        }).catch(t => {
                            Swal.fire("Gagal!", "Gagal menghapus data!", "error")
                        })
                    })
                },
            }
        });
    </script>    
}


<div id="app">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                &nbsp;
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Data Master User</h4>
                    </div><!--end card-header-->
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 col-sm-12">
                                <div class="float-md-left">
                                    <div class="form">
                                        <div class="form-group row">
                                            <label for="perpage" class="col-md-6 col-sm-12 col-form-label">Per Page</label>
                                            <div class="col-md-6 col-sm-12">
                                                <select name="perpage" id="perpage" v-model="limit" class="form-control">
                                                    <option value="10">10</option>
                                                    <option value="25">25</option>
                                                    <option value="50">50</option>
                                                    <option value="100">100</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <div class="float-md-right">
                                    <div class="form">
                                        <div class="form-group row">
                                            <label for="search" class="col-md-6 col-sm-12 col-form-label">Search</label>
                                            <div class="col-md-6 col-sm-12">
                                                <input type="text" class="form-control" id="search" name="search" v-model="keyword">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table id="datatable" class="table table-bordered" style="border-collapse: collapse; border-spacing: 0; width: 100%; overflow-x: scroll;">
                                        <thead>
                                            <tr>
                                                <th>NIK</th>
                                                <th>Name</th>                                                
                                                <th style="text-align: center;"><a class="btn btn-primary" :href="baseUrl + '/User/Add/'">Tambah</a></th>
                                            </tr>
                                        </thead>
                                        <tbody id="tblbody">
                                            <template v-for="(item, index) in this.masterusers">
                                                <tr>
                                                    <td>{{ item.Nik }}</td>
                                                    <td>{{ item.Nama }}</td>
                                                    <td style="text-align: center; width: 2%;">
                                                        <a class="btn btn-success btn-sm btn-block" :href="baseUrl + '/User/Edit/?id=' + item.Nik">Edit</a>
                                                        <button class="btn btn-danger btn-sm btn-block" v-on:click="deleteUser(item)">Hapus</button>
                                                    </td>
                                                </tr>
                                            </template>
                                            <tr v-if="isLoading">
                                                <td colspan="7" style="text-align: center;"><img src="~/assets/images/spinner.gif" style="width: 48px;" /></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                &nbsp;
                            </div>
                            <div class="col-md-4 justify-content-center">
                                <div class="form-group row justify-content-center">
                                    <button class="btn btn-primary" v-on:click="currPage = currPage-1" :disabled="currPage <= 1">Previous</button>
                                    &nbsp;
                                    <select class="form-control" v-model="currPage" style="width: 15%;">
                                        <option v-for="n in totalPage" v-bind:value="n">
                                            {{ n }}
                                        </option>
                                    </select>
                                    &nbsp;
                                    <button class="btn btn-primary" v-on:click="currPage = currPage+1" :disabled="currPage >= totalPage">Next</button>
                                </div>
                            </div>
                            <div class="col-md-4">
                                &nbsp;
                            </div>
                        </div>
                    </div>
                </div>
            </div> <!-- end col -->
        </div> <!-- end row -->
    </div><!-- container -->    
</div>